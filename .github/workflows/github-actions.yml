# github repository Actions 페이지에 나타낼 이름
name: ScheduleSnap CI/CD

# event trigger
on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:

    ## jdk setting
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin' # https://github.com/actions/setup-java

    ## gradle caching
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-


    ## create application.properties
    - name: make application.properties
      if: contains(github.ref, 'main')
      run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES_PROD }}" > ./application.properties
      shell: bash

    ## gradle build
    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew build -x test
        

    ## docker build & push to production
    - name: Docker build & push to prod
      if: contains(github.ref, 'main')
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/schedulesnap .
          docker push ${{ secrets.DOCKER_REPO }}/schedulesnap




    ## deploy to production
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v0.1.9
      with:
          host: ${{ secrets.HOST_PROD }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
              sudo -S <<< "${{ secrets.SUDO_PASSWORD }}" docker rm -f $(docker ps -qa)
              sudo -S <<< "${{ secrets.SUDO_PASSWORD }}" docker login ${{ secrets.DOCKER_REPO }} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
              sudo -S <<< "${{ secrets.SUDO_PASSWORD }}" docker pull ${{ secrets.DOCKER_REPO }}/schedulesnap
              sudo -S <<< "${{ secrets.SUDO_PASSWORD }}" docker run -p 8080:80 ${{ secrets.DOCKER_REPO }}/schedulesnap &
              sudo -S <<< "${{ secrets.SUDO_PASSWORD }}" docker-compose up -d
              sudo -S <<< "${{ secrets.SUDO_PASSWORD }}" docker image prune -f

  ## time
  current-time:
    needs: CI-CD
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH:mm:ss
          utcOffset: "+09:00" # 기준이 UTC이기 때문에 한국시간인 KST를 맞추기 위해 +9시간 추가

      - name: Print Current Time
        run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}" # current-time 에서 지정한 포맷대로 현재 시간 출력
        shell: bash
