# github repository Actions 페이지에 나타낼 이름
name: ScheduleSnap CI/CD

# event trigger
on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:

    ## jdk setting
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin' # https://github.com/actions/setup-java

    ## gradle caching
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-


    ## create application.properties
    - name: make application.properties
      if: contains(github.ref, 'main')
      run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.PROPERTIES_PROD }}" > ./application.properties
      shell: bash

    ## gradle build
    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew build -x test
        
        
      # 디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy

      # Jar 파일 복사
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy

    - name: Make zip file
      run: zip -r ./schedulesnap.zip ./deploy
      shell: bash


      # appspec.yml 파일 복사
    - name: Copy appspec.yml
      run: cp appspec.yml ./deploy


      # script files 복사
    - name: Copy script
      run: cp ./scripts/*.sh ./deploy

    - name: Make zip file
      run: zip -r ./schedulesnapscript.zip ./deploy
      shell: bash


      # apllication files 복사
    - name: Copy application.yml
      run: cp ./src/main/resources/application.properties ./deploy

        
    # AWS 사용자 정보 입력
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        
    # S3에 zip 파일 업로드
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./schedulesnapscript.zip s3://${{ secrets.S3_BUCKET_NAME }}/
        
      # Deploy
    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run:
        aws deploy create-deployment
        --application-name ScheduleSnap
        --deployment-group-name schedulesnap-deploy
        --file-exists-behavior OVERWRITE
        --s3-location bucket=schedulesnapbucket,bundleType=zip,key=schedulesnapscript.zip
        --region ap-northeast-2
        --ignore-application-stop-failures
  ## time
  current-time:
    needs: CI-CD
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH:mm:ss
          utcOffset: "+09:00" # 기준이 UTC이기 때문에 한국시간인 KST를 맞추기 위해 +9시간 추가

      - name: Print Current Time
        run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}" # current-time 에서 지정한 포맷대로 현재 시간 출력
        shell: bash

